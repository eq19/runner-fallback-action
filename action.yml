name: 'Check Runner Availability'
description: 'Check for availability of self-hosted GitHub runners and fallback to GitHub-hosted runners if needed'
author: '@jimmygchen'
branding:
  icon: activity
  color: blue
inputs:
  credentials:
    description: 'The gcloud credentials'
    required: true
  github-token:
    description: 'GitHub token with repo and actions scope for querying runner information'
    required: true
  primary-runner:
    description: 'Comma-separated list of labels for the primary runner, e.g. self-hosted,linux'
    required: true
  fallback-runner:
    description: 'Name or labels of the fallback runner, e.g. ubuntu-latest'
    required: true
weoutputs:
  use-runner:
    description: 'The runner to use, either the primary or the fallback runner, based on availability'
runs:
  #using: 'node20'
  #main: 'dist/index.js'
  using: composite
  steps:
    - name: ðŸ’Ž Set Credential
      id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: ${{ inputs.credentials }}

    - name: ðŸ’Ž Authentication
      uses: 'google-github-actions/setup-gcloud@v2'
      with:
        install_components: 'alpha,cloud-datastore-emulator'

    - name: ðŸ’Ž Determine which runner to use
      uses: actions/github-script@v7
      with:
        result-encoding: string
        script: |
          const { spawnSync } = require( 'child_process' )
          const ls = spawnSync('ls', [ '-lh', '/usr' ] )
          console.log( `stdout: ${ ls.stdout.toString() }` )

    - name: ðŸ’Ž Variables
      shell: bash
      id: variables
      run: |
        gcloud info
        echo "\n"
        gcloud compute instances list
        echo "\n"
        gcloud compute instances list --format=json
        echo "\n"
        array=`gcloud compute instances list --format=json`
        echo "\n"
        echo "$array"
        echo "\n"
        if [ -z "$array" ]; then gcloud compute instances delete instance-template --zone=us-central1-a --quiet; fi
